version: "3.8"
services:
  frontend:
    build: ../frontend
    container_name: frontend_container
    restart: always
    ports:
      - "8080:8080"
    networks:
      - docker_exam-network
    depends_on:
      - backend
  backend:
    build: ../backend
    container_name: backend_container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "5000:5000"
    networks:
      - docker_exam-network
    volumes:
      - profile_images:/app/frontend/assets/img
    command: >
      sh -c "npm install && npm start"
  db:
    image: mysql:5.7
    container_name: mysql_container
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    networks:
      - docker_exam-network
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "db", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 5
volumes:
  mysql_data:
  profile_images:
networks:
  docker_exam-network:
    driver: bridge
